{"version":3,"sources":["components/title.jsx","components/AboutMe/about.jsx","components/SortingAlgorithms/bubble.js","components/SortingAlgorithms/quick.js","components/SortingAlgorithms/merge.js","components/SortingAlgorithms/selection.js","components/SortingAlgorithms/insertion.js","components/SortingAlgorithms/sortingAlgorithms.jsx","components/OtherProjects/otherProjects.jsx","components/main.jsx","index.js"],"names":["Title","className","Component","About","state","id","bubbleSort","array","anmationsArray","i","length","j","push","temp","quickAnimations","quickSort","currentArray","left","right","currentIndex","pivot","Math","floor","swap","partition","leftIndex","rightIndex","mergeAnimations","mergeSort","originalArray","beginMergeSort","start","arrayOne","arrayTwo","arrayLength","tempVal","mergedArray","shift","merge","selectionAnimations","arr","index1","index2","insertionAnimations","SortingAlgos","props","showBubble","showQuick","showInsertion","showMerge","showHeap","disableButtons","this","generateArray","tempArr","window","innerWidth","random","innerHeight","setState","sortNumber","randomArray","sortedTempArr","jsSortedArray","sort","a","b","animationArray","sortedArray","bars","document","getElementsByClassName","barIndex","newHeight","barStyle","style","setTimeout","height","copyOfArr","slice","animationsArray","size","min","selectionSort","animations","currentElement","insertionSort","disabled","onClick","bubble","quick","selection","insertion","map","val","tag","key","OtherProjects","href","Main","showAbout","showAlgo","showOther","titleColor","element","React","createContext","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.581f725e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.css\";\nclass Title extends Component {\n  render() {\n    return <h1 className=\"title\">Hi, I'm Olimjon</h1>;\n  }\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nclass About extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"mainContent\">\n        <h2>About Me</h2>\n        <hr className=\"headlineHr\" />\n        <div className=\"aboutContent\">\n          <div>\n            <p>\n              Hello my name is Olimjon. I am a student in the University of\n              texas at Dallas class of 2023. <br />I am currently studying\n              computer science and have a great passion to create projects using\n              code and concepts I learn in school or by\n            </p>\n          </div>\n\n          <div className=\"aboutSkillsContainer\">\n            <div className=\"skills\">\n              <h3>Languages</h3>\n              <ul>\n                <li>Java</li>\n                <li>C++</li>\n                <li>Dart</li>\n                <li>Python</li>\n                <li>Javascript</li>\n              </ul>\n            </div>\n            <div id=\"middleSkills\" className=\"skills\">\n              <h3>FrameWorks and Libraries</h3>\n              <ul>\n                <li>React</li>\n                <li>Flutter</li>\n                <li>JavaFX</li>\n              </ul>\n            </div>\n            <div className=\"skills\">\n              <h3>Databases</h3>\n              <ul>\n                <li>Firebase/Firestore</li>\n                <li>More to come soon!!</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","export function bubbleSort(array) {\n  let anmationsArray = [];\n  for (let i = 0; i < array.length; i++) {\n    for (let j = 0; j < array.length - 1; j++) {\n      anmationsArray.push([[j], [array[j]]]);\n      anmationsArray.push([[j + 1], [array[j + 1]]]);\n      if (array[j] > array[j + 1]) {\n        anmationsArray.push([[j], [array[j + 1]]]);\n        anmationsArray.push([[j + 1], [array[j]]]);\n        //swap\n        let temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n      }\n    }\n  }\n  return [anmationsArray, array];\n}\n","export var quickAnimations = [];\n\nexport function quickSort(currentArray, left, right) {\n  var currentIndex;\n  if (currentArray.length > 1) {\n    currentIndex = partition(currentArray, left, right);\n    if (left < currentIndex - 1) {\n      quickSort(currentArray, left, currentIndex - 1);\n    }\n    if (currentIndex < right) {\n      quickSort(currentArray, currentIndex, right);\n    }\n  }\n  return currentArray;\n}\n\nfunction partition(array, left, right) {\n  var pivot = array[Math.floor((left + right) / 2)];\n  var i = left;\n  var j = right;\n  while (i <= j) {\n    while (array[i] < pivot) {\n      i++;\n    }\n    while (array[j] > pivot) {\n      j--;\n    }\n    if (i <= j) {\n      quickAnimations.push([i, array[j]]);\n      quickAnimations.push([j, array[i]]);\n      swap(array, i, j);\n      i++;\n      j--;\n    }\n  }\n  return i;\n}\nfunction swap(array, leftIndex, rightIndex) {\n  var temp = array[leftIndex];\n  array[leftIndex] = array[rightIndex];\n  array[rightIndex] = temp;\n}\nexport function clearQuickAnimationsArray() {\n  quickAnimations.length = 0;\n}\n","export var mergeAnimations = [];\nexport function mergeSort(originalArray) {\n  let length = originalArray.length;\n  return beginMergeSort(originalArray, length, 0);\n}\nfunction beginMergeSort(originalArray, length, start) {\n  let arrayOne = [];\n  let arrayTwo = [];\n  let arrayLength = originalArray.length;\n  if (arrayLength <= 1) {\n    return originalArray;\n  } else {\n    //adding to array one\n    for (let i = 0; i < Math.floor(arrayLength / 2); i++) {\n      let tempVal = originalArray[i];\n      arrayOne.push(tempVal);\n    }\n    //adding to array two\n    for (let i = Math.floor(arrayLength / 2); i < arrayLength; i++) {\n      let tempVal = originalArray[i];\n      arrayTwo.push(tempVal);\n    }\n\n    //recurse\n    arrayOne = beginMergeSort(arrayOne, length, start);\n    arrayTwo = beginMergeSort(\n      arrayTwo,\n      length,\n      Math.floor((start + originalArray.length - 1) / 2) + 1\n    );\n  }\n  return merge(arrayOne, arrayTwo, 0);\n}\n//merge the two arrays\nfunction merge(arrayOne, arrayTwo, start) {\n  let mergedArray = [];\n  let i = 0;\n  while (arrayOne.length !== 0 && arrayTwo.length !== 0) {\n    if (arrayOne[0] > arrayTwo[0]) {\n      mergeAnimations.push([[i + mergedArray.length + start], [arrayTwo[0]]]);\n      mergedArray.push(arrayTwo[0]);\n      arrayTwo.shift();\n    } else {\n      mergeAnimations.push([[i + mergedArray.length + start], [arrayOne[0]]]);\n      mergedArray.push(arrayOne[0]);\n      arrayOne.shift();\n    }\n  }\n  i = 0;\n  while (arrayOne.length !== 0) {\n    mergeAnimations.push([[i + mergedArray.length + start], [arrayOne[0]]]);\n    mergedArray.push(arrayOne[0]);\n    arrayOne.shift();\n  }\n  i = 0;\n  while (arrayTwo.length !== 0) {\n    mergeAnimations.push([[i + mergedArray.length + start], [arrayTwo[0]]]);\n    mergedArray.push(arrayTwo[0]);\n    arrayTwo.shift();\n  }\n  return mergedArray;\n}\nexport function clearMergeAnimationsArray() {\n  mergeAnimations.length = 0;\n}\n","export var selectionAnimations = [];\nexport function selectionSort(a) {\n  let originalArray = a.slice();\n  let size = originalArray.length;\n  //   let sortedArray = [];\n  for (let i = 0; i < size; i++) {\n    let min = i;\n    //check through each one of the elements after i\n    for (let j = i + 1; j < size; j++) {\n      let tempVal = originalArray[j];\n      selectionAnimations.push([[i], [originalArray[i]]]);\n      selectionAnimations.push([[j], [originalArray[j]]]);\n      //check if the current element is less than last smallest value\n      if (tempVal < originalArray[min]) {\n        min = j;\n      }\n    }\n    if (min !== i) {\n      let tempVal = originalArray[i];\n      selectionAnimations.push([[i], [originalArray[min]]]);\n      selectionAnimations.push([[min], [tempVal]]);\n      swap(originalArray, i, min);\n    }\n  }\n  return originalArray;\n}\n\nfunction swap(arr, index1, index2) {\n  let tempVal = arr[index2];\n  arr[index2] = arr[index1];\n  arr[index1] = tempVal;\n}\n\nexport function clearSelectionAnimationsArray() {\n  selectionAnimations.length = 0;\n}\n","export var insertionAnimations = [];\nexport function insertionSort(a) {\n  let originalArray = a.slice();\n  let size = originalArray.length;\n  //iterate through each element in the array\n  for (let i = 0; i < size; i++) {\n    let currentElement = originalArray[i];\n    //for each element, check previous elements in the array\n    for (let j = 0; j < i; j++) {\n      //swap the element when the elemen is greater than element at j but less than j+1\n      if (\n        currentElement <= originalArray[j] &&\n        currentElement <= originalArray[j + 1]\n      ) {\n        insertionAnimations.push([[i], [originalArray[j]]]);\n        insertionAnimations.push([[j], [originalArray[i]]]);\n        swap(originalArray, i, j);\n      }\n    }\n  }\n  return originalArray;\n}\nfunction swap(arr, index1, index2) {\n  let temp = arr[index1];\n  arr[index1] = arr[index2];\n  arr[index2] = temp;\n}\nexport function clearInsertionAnimations() {\n  insertionAnimations.length = 0;\n}\n","import React, { Component } from \"react\";\nimport \"./bubble.js\";\nimport { bubbleSort } from \"./bubble.js\";\nimport { quickSort, clearQuickAnimationsArray, quickAnimations } from \"./quick\";\nimport { mergeSort, clearMergeAnimationsArray, mergeAnimations } from \"./merge\";\nimport {\n  selectionSort,\n  clearSelectionAnimationsArray,\n  selectionAnimations,\n} from \"./selection\";\nimport {\n  insertionSort,\n  clearInsertionAnimations,\n  insertionAnimations,\n} from \"./insertion\";\n\nconst ANIMATION_SPEED = 5;\nclass SortingAlgos extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      arr: [],\n      showBubble: false,\n      showQuick: false,\n      showInsertion: false,\n      showMerge: false,\n      showHeap: false,\n      disableButtons: false,\n    };\n  }\n  componentDidMount() {\n    this.generateArray();\n  }\n  generateArray() {\n    const tempArr = [];\n    for (let i = 1; i < window.innerWidth / 6; i++) {\n      tempArr.push(\n        Math.floor(Math.random() * (window.innerHeight / 5 - 5 + 1) + 5)\n      );\n    }\n    this.setState({ arr: tempArr });\n  }\n  enableButtons() {\n    this.setState({});\n  }\n  //------------------------------------testing sorting methods------------------------------------\n  testSortingAlgorithm(sortNumber) {\n    for (let j = 0; j < 50; j++) {\n      let randomArray = [];\n      let sortedTempArr = [];\n      //populate the array\n      for (let i = 1; i < window.innerWidth / 6; i++) {\n        randomArray.push(\n          Math.floor(Math.random() * (window.innerHeight / 5 - 5 + 1) + 5)\n        );\n      }\n      if (sortNumber === 0) {\n        sortedTempArr = bubbleSort(randomArray);\n      } else if (sortNumber === 1) {\n        sortedTempArr = quickSort(randomArray, 0);\n      }\n      let jsSortedArray = randomArray.sort(function (a, b) {\n        return a - b;\n      });\n\n      //conpare every element\n\n      for (let i = 0; i < sortedTempArr.length; ++i) {\n        if (sortedTempArr[i] !== jsSortedArray[i]) return false;\n      }\n      // let int = clearAnimationsArray();\n      // animations = [];\n    }\n    return true;\n  }\n  //------------------------------------sorting animations------------------------------------\n  bubble() {\n    let copyOfArr = this.state.arr;\n    const [animationArray, sortedArray] = bubbleSort(copyOfArr);\n    for (let i = 0; i < animationArray.length; i++) {\n      const bars = document.getElementsByClassName(\"bar\");\n      const [barIndex, newHeight] = animationArray[i];\n      const barStyle = bars[barIndex].style;\n      setTimeout(() => {\n        barStyle.height = `${newHeight}px`;\n      }, (i * ANIMATION_SPEED) / 100);\n    }\n    setTimeout(() => {\n      this.setState({ arr: sortedArray, disableButtons: false });\n    }, (ANIMATION_SPEED * animationArray.length) / 100);\n  }\n  quick() {\n    const copyOfArr = this.state.arr.slice();\n    let sortedArray = quickSort(copyOfArr, 0, copyOfArr.length - 1);\n    const animationArray = quickAnimations;\n    for (let i = 0; i < animationArray.length; i++) {\n      const bars = document.getElementsByClassName(\"bar\");\n      const [barIndex, newHeight] = animationArray[i];\n      const barStyle = bars[barIndex].style;\n      setTimeout(() => {\n        barStyle.height = `${newHeight}px`;\n      }, i * ANIMATION_SPEED);\n    }\n    setTimeout(() => {\n      clearQuickAnimationsArray();\n      this.setState({ arr: sortedArray, disableButtons: false });\n    }, ANIMATION_SPEED * animationArray.length);\n  }\n  merge() {\n    let copyOfArr = this.state.arr.slice();\n    const animationsArray = mergeAnimations;\n    let sortedArray = mergeSort(copyOfArr);\n\n    for (let i = 0; i < animationsArray.length; i++) {\n      const bars = document.getElementsByClassName(\"bar\");\n      const [barIndex, newHeight] = animationsArray[i];\n      const barStyle = bars[barIndex].style;\n      setTimeout(() => {\n        barStyle.height = `${newHeight}px`;\n      }, i * ANIMATION_SPEED);\n    }\n\n    setTimeout(() => {\n      clearMergeAnimationsArray();\n      this.setState({ arr: sortedArray, disableButtons: false });\n    }, ANIMATION_SPEED * animationsArray.length);\n  }\n  selection() {\n    const copyOfArr = this.state.arr.slice();\n    let sortedArray = selectionSort(copyOfArr);\n    const animations = selectionAnimations;\n    for (let i = 0; i < animations.length; i++) {\n      const bars = document.getElementsByClassName(\"bar\");\n      const [barIndex, newHeight] = animations[i];\n      const barStyle = bars[barIndex].style;\n      setTimeout(() => {\n        barStyle.height = `${newHeight}px`;\n      }, (i * ANIMATION_SPEED) / 100);\n    }\n    setTimeout(() => {\n      clearSelectionAnimationsArray();\n      this.setState({\n        arr: sortedArray,\n        disableButtons: false,\n      });\n    }, (animations.length * ANIMATION_SPEED) / 100);\n  }\n  insertion() {\n    const copyOfArr = this.state.arr.slice();\n    let sortedArray = insertionSort(copyOfArr);\n    const animations = insertionAnimations;\n    for (let i = 0; i < animations.length; i++) {\n      const bars = document.getElementsByClassName(\"bar\");\n      const [barIndex, newHeight] = animations[i];\n      const barStyle = bars[barIndex].style;\n      setTimeout(() => {\n        barStyle.height = `${newHeight}px`;\n      }, (i * ANIMATION_SPEED) / 10);\n    }\n    setTimeout(() => {\n      clearInsertionAnimations();\n      this.setState({\n        arr: sortedArray,\n        disableButtons: false,\n      });\n    }, (ANIMATION_SPEED * animations.length) / 10);\n  }\n\n  //------------------------------------render ------------------------------------\n  render() {\n    const { arr } = this.state;\n    return (\n      <div id=\"algoMain\" className=\"mainContent\">\n        <ul className=\"algoList\">\n          <li className=\"algoListItem\">\n            <button\n              disabled={this.state.disableButtons}\n              onClick={() => {\n                this.bubble();\n                this.setState({\n                  disableButtons: true,\n                });\n              }}\n              className=\"algoListButtons\"\n            >\n              Bubblesort (x500)\n            </button>\n          </li>\n          <li className=\"algoListItem\">\n            <button\n              disabled={this.state.disableButtons}\n              onClick={() => {\n                this.quick();\n                this.setState({\n                  disableButtons: true,\n                });\n              }}\n              className=\"algoListButtons\"\n            >\n              Quicksort(x5)\n            </button>\n          </li>\n          <li className=\"algoListItem\">\n            <button\n              disabled={this.state.disableButtons}\n              onClick={() => {\n                this.selection();\n                this.setState({\n                  showBubble: false,\n                  showQuick: false,\n                  showInsertion: false,\n                  showMerge: false,\n                  showHeap: true,\n                  disableButtons: true,\n                });\n              }}\n              className=\"algoListButtons\"\n            >\n              Selectionsort (x500)\n            </button>\n          </li>\n          <li className=\"algoListItem\">\n            <button\n              disabled={this.state.disableButtons}\n              onClick={() => {\n                this.merge();\n                this.setState({\n                  showBubble: false,\n                  showQuick: false,\n                  showInsertion: false,\n                  showMerge: true,\n                  showHeap: false,\n                  disableButtons: true,\n                });\n              }}\n              className=\"algoListButtons\"\n            >\n              Mergesort (x5)\n            </button>\n          </li>\n          <li className=\"algoListItem\">\n            <button\n              disabled={this.state.disableButtons}\n              onClick={() => {\n                this.insertion();\n                this.setState({\n                  showBubble: false,\n                  showQuick: false,\n                  showInsertion: true,\n                  showMerge: false,\n                  showHeap: false,\n                  disableButtons: true,\n                });\n              }}\n              className=\"algoListButtons\"\n            >\n              Insertionsort (x50)\n            </button>\n          </li>\n        </ul>\n        <div>\n          {arr.map((val, tag) => (\n            <div key={tag} className=\"bar\" style={{ height: val + \"px\" }}></div>\n          ))}\n        </div>\n        <button\n          disabled={this.state.disableButtons}\n          className=\"algoListButtons\"\n          onClick={() => this.generateArray()}\n        >\n          Generate new Array\n        </button>\n      </div>\n    );\n  }\n}\nexport default SortingAlgos;\n","import React, { Component } from \"react\";\nclass OtherProjects extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"mainContent\">\n        <div className=\"listProjects\">\n          <p>\n            Coming soon!\n            <br />\n            For now, check out my{\" \"}\n            <a href=\"https://github.com/OlimjonNematov\">github</a>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OtherProjects;\n","import React, { Component } from \"react\";\nimport Title from \"./title\";\nimport \"./index.css\";\nimport About from \"./AboutMe/about\";\nimport SortingAlgos from \"./SortingAlgorithms/sortingAlgorithms\";\nimport OtherProjects from \"./OtherProjects/otherProjects\";\n\nclass Main extends Component {\n  state = {\n    showAbout: true,\n    showAlgo: false,\n    showOther: false,\n    titleColor: \"white\",\n  };\n\n  render() {\n    return (\n      <div className=\"main\">\n        <div>\n          <Title></Title>\n          <hr className=\"titleHr\" />\n          {/* buttons */}\n          <div className=\"Menu\">\n            <ul className=\"menuStyle\">\n              <li className=\"listItems\">\n                <button\n                  className=\"menuButton\"\n                  onClick={() => {\n                    this.setState({\n                      showAbout: true,\n                      showAlgo: false,\n                      showOther: false,\n                    });\n                  }}\n                >\n                  ABOUT ME\n                </button>\n              </li>\n              <li className=\"listItems\">\n                <button\n                  className=\"menuButton\"\n                  onClick={() => {\n                    this.setState({\n                      showAbout: false,\n                      showAlgo: true,\n                      showOther: false,\n                    });\n                  }}\n                >\n                  SORTING ALGORITHMS\n                </button>\n              </li>\n              <li className=\"listItems\">\n                <button\n                  className=\"menuButton\"\n                  onClick={() => {\n                    this.setState({\n                      showAbout: false,\n                      showAlgo: false,\n                      showOther: true,\n                    });\n                  }}\n                >\n                  OTHER PROJECTS\n                </button>\n              </li>\n            </ul>\n          </div>\n          <div>\n            <div>{this.state.showAbout && <About></About>}</div>\n            <div>{this.state.showAlgo && <SortingAlgos></SortingAlgos>}</div>\n            <div>{this.state.showOther && <OtherProjects></OtherProjects>}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Main from \"./components/main\";\n\nconst element = <h1>hi kids</h1>;\n\nReact.createContext(element);\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"],"sourceRoot":""}